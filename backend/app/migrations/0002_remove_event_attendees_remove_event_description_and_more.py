# Generated by Django 5.2.1 on 2025-05-12 20:26

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('app', '0001_initial'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='event',
            name='attendees',
        ),
        migrations.RemoveField(
            model_name='event',
            name='description',
        ),
        migrations.RemoveField(
            model_name='location',
            name='latitude',
        ),
        migrations.RemoveField(
            model_name='location',
            name='longitude',
        ),
        migrations.RemoveField(
            model_name='location',
            name='rooms',
        ),
        migrations.AddField(
            model_name='event',
            name='attendee_registration',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='event',
            name='cost',
            field=models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
        ),
        migrations.AddField(
            model_name='event',
            name='duration_hours',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='event',
            name='email',
            field=models.EmailField(blank=True, max_length=254, null=True),
        ),
        migrations.AddField(
            model_name='event',
            name='event_type',
            field=models.CharField(choices=[('RPG', 'Role Playing Game'), ('WKS', 'Workshop'), ('MHE', 'Miniature Hobby Events'), ('LRP', 'LARP'), ('CGM', 'Non-Collectible / Tradable Card Game'), ('BGM', 'Board Game'), ('ENT', 'Entertainment Events'), ('TRD', 'Trade Day Event'), ('SEM', 'Seminar'), ('TCG', 'Tradable Card Game'), ('SPA', 'Supplemental Activities'), ('HMN', 'Historical Miniatures'), ('ZED', 'Isle of Misfit Events'), ('NMN', 'Non-Historical Miniatures'), ('KID', 'Kids Activities'), ('EGM', 'Electronic Games'), ('FLM', 'Film Fest'), ('TDA', 'True Dungeon Adventures!'), ('OTH', 'OTHER')], default='OTH', max_length=100),
        ),
        migrations.AddField(
            model_name='event',
            name='experience_required',
            field=models.CharField(choices=[('None', "None (You've never played before - rules will be taught)"), ('Some', "Some (You've played it a bit and understand the basics)"), ('Expert', 'Expert (You play it regularly and know all the rules)')], default='None', max_length=100),
        ),
        migrations.AddField(
            model_name='event',
            name='game_id',
            field=models.CharField(blank=True, max_length=50, null=True, unique=True),
        ),
        migrations.AddField(
            model_name='event',
            name='game_system',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='event',
            name='gaming_group',
            field=models.CharField(default='Unknown Group', max_length=255),
        ),
        migrations.AddField(
            model_name='event',
            name='gm_names',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='event',
            name='last_modified',
            field=models.DateField(auto_now=True),
        ),
        migrations.AddField(
            model_name='event',
            name='long_description',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='event',
            name='materials_required',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='event',
            name='materials_required_details',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='event',
            name='maximum_players',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='event',
            name='minimum_age',
            field=models.CharField(choices=[('Teen', 'Teen (13+)'), ('Mature', 'Mature (18+)'), ('Everyone', 'Everyone (6+)'), ('21+', '21+'), ('Kids', 'Kids Only (12 and under)')], default='Everyone', max_length=50),
        ),
        migrations.AddField(
            model_name='event',
            name='minimum_play_time',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='event',
            name='minimum_players',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='event',
            name='round_number',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='event',
            name='rules_edition',
            field=models.CharField(blank=True, max_length=10, null=True),
        ),
        migrations.AddField(
            model_name='event',
            name='short_description',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='event',
            name='special_category',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='event',
            name='table_number',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='event',
            name='tickets_available',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='event',
            name='total_rounds',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='event',
            name='tournament',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='event',
            name='website',
            field=models.URLField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='event',
            name='title',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='location',
            name='address',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_name', models.CharField(max_length=100)),
                ('floor_level', models.IntegerField(blank=True, null=True)),
                ('room_type', models.CharField(blank=True, max_length=100, null=True)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rooms', to='app.location')),
            ],
        ),
        migrations.AddField(
            model_name='event',
            name='room',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.room'),
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('travel_time', models.IntegerField()),
                ('is_elevator', models.BooleanField(default=False)),
                ('stairs', models.BooleanField(default=False)),
                ('end_location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='end_routes', to='app.location')),
                ('start_location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='start_routes', to='app.location')),
            ],
        ),
        migrations.CreateModel(
            name='UserEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('wishlist', 'Wish List'), ('unavailable', 'Unavailable'), ('purchased', 'Purchased')], default='wishlist', max_length=20)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_events', to='app.event')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_events', to='app.user')),
            ],
            options={
                'unique_together': {('user', 'event')},
            },
        ),
    ]
